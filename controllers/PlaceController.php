<?php

namespace app\controllers;

use app\models\Photo;
use Yii;
use app\models\Place;
use app\models\PlaceSearch;
use yii\db\Exception;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use yii\web\UploadedFile;

/**
 * PlaceController implements the CRUD actions for Place model.
 */
class PlaceController extends Controller
{
    public $layout = "index";

    public function beforeAction($action)
    {
        if(Yii::$app->language != Yii::$app->session->get("lang"))
            Yii::$app->language = Yii::$app->session->get("lang");

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }

    /**
     * Lists all Place models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new PlaceSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Displays a single Place model.
     * @param integer $id
     * @return mixed
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new Place model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new Place();

        if ($model->load(Yii::$app->request->post())) {
            $tx = Yii::$app->db->beginTransaction();
            try{
                $model->user_id = Yii::$app->user->id;
                $model->last_update = date("Y-m-d H:i:s");
                if(!$model->save())
                    throw new  Exception(json_encode($model->errors));

                $model->logouploader = UploadedFile::getInstance($model, "logouploader");
                $filename = date("YmdHis").rand(100, 999). ".". $model->logouploader->extension;
                if(!file_exists(Yii::$app->params["UPLOADPATH"]))
                    mkdir(Yii::$app->params["UPLOADPATH"]);

                if(!file_exists(Yii::$app->params["LOGOPATH"]))
                    mkdir(Yii::$app->params["LOGOPATH"]);

                if(!file_exists(Yii::$app->params["PHOTOPATH"]))
                    mkdir(Yii::$app->params["PHOTOPATH"]);

                if(!file_exists(Yii::$app->params["LOGOPATH"].$filename))
                    if(!$model->logouploader->saveAs(Yii::$app->params["LOGOPATH"].$filename))
                        throw new Exception(Yii::t("app", "Cannot Upload Logo"));

                $tx->commit();
                return $this->redirect(['view', 'id' => $model->id]);
            } catch (Exception $ex) {
                $tx->rollBack();
                Yii::$app->session->setFlash("danger", $ex->getMessage());
            }
        } else {
            return $this->render('create', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Updates an existing Place model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);
        $temp = $model->logo;
        if ($model->load(Yii::$app->request->post())) {
            try {
                $model->logouploader = UploadedFile::getInstance($model, 'logouploader');
                if(!isset($model->logouploader))
                    $model->logo=$temp;

                if(!$model->save())
                    throw new Exception(json_encode($model->errors));

                if(isset($model->logouploader)) {
                    @mkdir(Yii::$app->params["LOGOPATH"]);
                    if(!file_exists($model->logo))
                        $model->logouploader->saveAs(Yii::$app->params["LOGOPATH"].$model->logo);
                }

                $tx->commit();
                return $this->redirect(['view', 'id' => $model->id]);
            } catch (Exception $ex) {
                $tx->rollBack();
                Yii::$app->session->setFlash("danger", $ex->getMessage());
            }

            return $this->redirect(['view', 'id' => $model->id]);
        } else {
            return $this->render('update', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Deletes an existing Place model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        $this->findModel($id)->delete();

        return $this->redirect(['index']);
    }

    /**
     * Finds the Place model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return Place the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Place::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }

    public function actionUpdatephoto($id) {
        $model = $this->findModel($id);
        $post = Yii::$app->request->post("Place");
        if(isset($post)) {
            $tx = Yii::$app->db->beginTransaction();
            try {
                $model->photouploader = UploadedFile::getInstances($model, "photouploader");
                foreach ($model->photouploader as $uploader) {
                    $p = new Photo();
                    $p->filename = date("YmdHis").rand(1000,9999).".".$uploader->extension;
                    $p->place_id = $model->id;
                    if(!$p->save())
                        throw new Exception(json_encode($p->errors));
                    @mkdir(Yii::$app->params["PHOTOPATH"]);
                    if(!file_exists(Yii::$app->params["PHOTOPATH"].$p->filename))
                        if(!$uploader->saveAs(Yii::$app->params["PHOTOPATH"].$p->filename))
                            throw new Exception(Yii::t('app', 'Cannot Upload Photo'));
                }
                $tx->commit();
                Yii::$app->session->setFlash("success", Yii::t('app', 'Success'));
            } catch (Exception $ex) {
                $tx->rollBack();
                Yii::$app->session->setFlash("danger", $ex->getMessage());
            }
            return $this->refresh();
        }
        return $this->render('photo', [
            'model' => $model
        ]);
    }

    public function actionRemovephoto() {
        if(Yii::$app->request->isAjax) {
            $photo = Photo::findOne($_POST['id']);
            if(Photo::deleteAll(['id' => $photo->id]) == 1){
                @unlink(Yii::$app->params["PHOTOPATH"].$photo->filename);
                echo $photo->id;
            }
        }
    }

    public function actionSyncfirebase() {
//        $serviceAccount = ServiceAccount::fromJsonFile(__DIR__.'/google-service-account.json');

        $models = Place::find()
            ->where(['status' => 'A'])
            ->orderBy('last_update desc');

        if(isset($models)) {
            try {
                $serviceAccount = ServiceAccount::fromJsonFile('js/luangprabang-c87aa49a5004.json');
                $firebase = (new Factory)
                    ->withServiceAccount($serviceAccount)
                    ->withDatabaseUri('https://luangprabang.firebaseio.com')
                    ->create();
                $database = $firebase->getDatabase();
                foreach ($models as $model) {
                    $place = $database
                        ->getReference('luangprabang/places')
                        ->push([
                            'name_lao' => $model->name_lao,
                            'name_eng' => $model->name_eng,
                            'lat' => $model->lat,
                            'lon' => $model->lon,
                            'village_lao' => $model->village_lao,
                            'village_eng' => $model->village_eng,
                            'description_lao' => $model->description_lao,
                            'description_eng' => $model->description_eng,
                            'district_id' => $model->district_id,
                            'user_id' => $model->user_id,
                            'last_update' => $model->last_update,
                            'logo' => $model->logo,
                        ]);
                    print_r($place);
                    echo "<hr/>";
                }
            } catch (Exception $ex) {
                print_r($ex->getMessage());
            }
        }
    }
}
