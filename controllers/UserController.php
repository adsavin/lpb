<?php

namespace app\controllers;

use Yii;
use app\models\User;
use app\models\UserSearch;
use yii\db\Exception;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;

/**
 * UserController implements the CRUD actions for User model.
 */
class UserController extends Controller
{
    public $layout = "index";

    public function beforeAction($action)
    {
        if(Yii::$app->user->isGuest)
            return $this->redirect(["site/login"]);

        if(Yii::$app->language != Yii::$app->session->get("lang"))
            Yii::$app->language = Yii::$app->session->get("lang");

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }

    /**
     * Lists all User models.
     * @return mixed
     */
    public function actionIndex()
    {
        if(Yii::$app->user->identity->attributes["role"] !== "Admin")
            return $this->redirect(["site/index"]);

        $searchModel = new UserSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Displays a single User model.
     * @param integer $id
     * @return mixed
     */
    public function actionView($id)
    {
        if(Yii::$app->user->identity->attributes["role"] !== "Admin")
            return $this->redirect(["site/index"]);

        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new User model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        if(Yii::$app->user->identity->attributes["role"] !== "Admin")
            return $this->redirect(["site/index"]);

        $model = new User();

        if ($model->load(Yii::$app->request->post())) {
            $model->password = $model->password == "" ? "" : sha1($model->password . Yii::$app->params['SALT']);
            if($model->save())
                return $this->redirect(['view', 'id' => $model->id]);
        } else {
            return $this->render('create', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Updates an existing User model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        if(Yii::$app->user->identity->attributes["role"] !== "Admin")
            return $this->redirect(["site/index"]);

        $model = $this->findModel($id);
        $temp = $model->password;
        if ($model->load(Yii::$app->request->post())) {
            $model->password = $model->password == "" ? $temp : sha1($model->password . Yii::$app->params["SALT"]);
            if($model->save())
                return $this->redirect(['view', 'id' => $model->id]);
        } else {
            $model->password = "";
            return $this->render('update', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Deletes an existing User model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        if(Yii::$app->user->identity->attributes["role"] !== "Admin")
            return $this->redirect(["site/index"]);

        $this->findModel($id)->delete();
        return $this->redirect(['index']);
    }

    /**
     * Finds the User model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return User the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = User::findOne($id)) !== null)
            return $model;
        else
            throw new NotFoundHttpException(Yii::t('app', 'The requested page does not exist.'));

    }

    public function actionChangepassword() {
        $model = $this->findModel(Yii::$app->user->id);
        $post = Yii::$app->request->post("User");
        if(isset($post)) {
            if($model->password !== sha1($post["oldpassword"] . Yii::$app->params["SALT"])) {
                $model->addError("oldpassword", Yii::t("app", "Currenct Password is Incorrect"));
            }

            if($post["newpassword"] !== $post["confirmpassword"]) {
                $model->addError("confirmpassword", Yii::t("app", "Confirm Password is Incorrect"));
            }

            if(!isset($model->errors) || count($model->getErrors()) == 0) {
                $model->password = sha1($post["newpassword"] . Yii::$app->params["SALT"]);
                if($model->save())
                    Yii::$app->session->setFlash("success", Yii::t('app', 'Success'));
                else
                    Yii::$app->session->setFlash("danger", json_encode($model->errors));

//                return $this->redirect(["site/index"]);
                return $this->refresh();
            }
        }

        return $this->render("password", [
            "model" => $model
        ]);
    }
}
